\section{Monte Carlo Generators}
\label{subsec:bg_generation}
\subsection{Background Generation}
\label{subsubsec:corsika}
\subsubsection{CORSIKA}
The primary background for the observation of atmospheric neutrino events is the other particles present in the cosmic ray interactions in the atmosphere.
These interactions produce many particules, most of which are stopped before reaching IceCube by the shielding provided by the Antarctic Glacier.
In order to correctly account for the interactions and decays of these particles, the \emph{CORSIKA} generator from Karlsruhe Institute of Technology is used\cite{CORSIKA}. 
The CORSIKA generator is a collection of code designed to simulate, interact, and propagate a cosmic ray air shower from the interaction point in the upper atmosphere to the surface. 
Originally designed for use with surface detectors such as Auger, HAWC, and IceTop, the code has been adapted for use in the IceCube collaboration by identifying the muon (and, sometimes, neutrino) components of the air shower.

CORSIKA has many modes of operation and options for configuration. 
The standard IceCube simulation of air showers uses the SIBYLL 2.1 hadronization mode \cite{SIBYLL-2.1} to follow the interactions through the shower. 

IceCube simulation of air showers uses two possible modes of CORSIKA.
The "Polygonato" mode, which generates cosmic rays following the model from \cite{Hoerandel-Polygonato}. 
The Polygonato flux parametrized the energy spectra of individual elements of the cosmic ray flux as power laws extrapolated to high energies.
In typical IceCube simulation, CORSIKA simulation produced using the Polygonato model includes a mixture of muons from all seasons, effectively producing an averaged flux useful under the assumption of equal livetime throughout the year.
The elemental ratios of the generated events follow the Polygonato flux directly, producing a "natural" flux of simulated events \cite{CORSIKA}.
The natural spectrum of the Polygonato CORSIKA simulation has the benefit of allowing a direct physical interpretation of the resulting spectrum without the need for reweighting and simplifies the prodution of coincident showers, which require a natural spectrum.

The second model, the five-component mode, reduces the full spectrum of cosmic rays to five effective families: hydrogen, helium, nickel, aluminum, and iron. 
Each of these components is allowed to have different spectral properties.
The five-component mode is useful due to the ease with which the user can modify and reweight to different primary spectra, allowing the investigation of different cosmic ray compositions without the production of dedicated simulation.
The simplicity associated with the reweighting of five-component simulation allows IceCube to produce unphysical spectra in order to optimize the production of simulated events necessary for the various analyses.
The five-component simulation may be reweighted to match cosmic ray models, including both the Polygonato model and the newer H3a model, which models the cosmic ray flux using three distinct populations of sources \cite{Gaisser-H4a}.
While this slightly complicates the use of the simulation in analyses, the ability to test with various spectra has been an invaluable tool for high energy analyses, which can be sensitive to changes in the cosmic ray spectrum above the knee.
Five-component CORSIKA simulation, due to the unphysical generation spectrum, cannot easily be used in the production of simulation involving timing coincidences between events and are currently supplemented by the Polygonato CORSIKA for this purpose.

In both cases, the particles from the air shower are only propagated to the surface of the ice. 
For analyses using the in-ice array, we take the muons reaching the surface from a CORSIKA simulation and propagate them through the ice, simulating the continuous and stochastic energy losses along the way. 
The muons are propagated to a surface in the ice consisting of a cylinder with radius 800 meters and length 1600 m centered on the IceCube detector.
In order to reach the detector, a muon must result from a cosmic ray interaction of approximately 600 GeV due to the shielding of the glacier.
Because of this, CORSIKA simulations typically have a lower energy cutoff of about this value to avoid simulating events that will not reach the detector.

In principle, neutrinos may also be produced using the CORSIKA generator. 
In practice, this tends to be extremely inefficient for most searches that are no explicitly looking for muons and neutrinos from the same air showers given the extremely low cross section of the neutrino relative to the muon.
For this reason, the background generation with CORSIKA in IceCube typically refers to muon events only, with no accompanying neutrino.

\label{subsubsec:muongun}
\subsubsection{MuonGun}
CORSIKA simulations are computationally costly and offer few ways to directly control the spectrum of events at the detector.
The characteristics of muons produced in an air shower are not known a priori.
Targeted simulations in which particular muon samples are required cannot easily be generated with CORSIKA.
In situations where the required muon simulation falls within a relatively narrow phase space, whether that be in energy, angle, or position inside of the detector, it can be beneficial to tailor simulation to the needs of specific analyses.
Alternatively, there are situations in which the details of the cosmic ray interactions are an unnecessary complication to the final level IceCube analyses.
In these situations, IceCube has developed a tool to bypass the full air shower simulation provided by CORSIKA, producing muons directly at a cylindrical surface inside the ice \cite{Thesis-Jakob}.
This tool, known as \emph{MuonGun}, has the benefit of removing the computationally costly simulation of the full air shower, giving the user more control over the resulting simulated events at the cost of information about the initial cosmic ray interactions.
This allows targeted, high statistics background simulation samples to be produced for analyses.

These features of MuonGun give the generator significant flexibility, allowing for a very focused simulation of muons that would not otherwise be possible with the current implimentation of the CORSIKA generator.
The downside, as with all targeted generation, is of course that one must be aware of the limitations. 
For example, the settings described above will provide a good description of muons reaching and triggering the DeepCore array, but will not include the correct contributions of muons in the outer IceCube detector.
This can result in disagreement between data and simulation if the limitations are not acknowledged and accounted for.

This abstraction disassociates the muon at the detector from the air shower, and therefore the cosmic ray, that produced it.
In order to properly account for the dependence on the cosmic ray spectrum in the muon weights, dedicated simulations must be produced using the full CORSIKA generator. 
By following the interaction, showering, and propagation to the detector, IceCube is able to produce an effective parametrization of the association between a particular cosmic ray spectrum and the muons reaching the detector.
This must only be done once, but requires a substantial number of simulated events in order to produce a clean parametrization in position, energy, zenith angle, and variables associated with shower multiplicities higher than one.
The version of MuonGun at the time of writing provides the parametrizations for the Polygonato \cite{Hoerandel-Polygonato} and H4a \cite{Gaisser-H4a} cosmic ray spectra. 
At the time of production for the analyses contained hereafter, all MuonGun simulation is produced assuming a multiplicity of 1, meaning that no bundles are yet produced with this generator.
This is a limitation of simulation time: the multiplicity parametrizations vastly extend the parameter space and therefore require significantly more time and effort to handle correctly.

\label{subsubsec:noise_triggers}
\subsubsection{Noise-Only Events}
While we only observe neutrinos and muons in the detector, we also observe a significant component of accidental triggers in the DeepCore array.
These events, labeled \emph{accidental triggers}, arise due to the low trigger threshold. 
In these events, no actual particle interactions due to muons or neutrinos are observed.
Instead, detector noise alone satisfies the trigger conditions, producing an event.

Simulation of accidental triggers involves only the noise and electronics simulation.
Because the events are relatively rare, the simluation requires a special mode, here called \emph{long-frame} simulation, which produces continuous detector readout. 
Breaking the traditional concept of the "simulated event", these simulation sets instead produce a 100 ms long "event" of random detector noise. 
These hits are then run through the simulation of waveforms, coincidences, and triggering as a normal simulated event.
After triggering, specialized code  is used to divide the long-frame simulation into smaller events similar to neutrino and muon simulations as well as actual experimental readout.

Once the events are generated, weighting the events is relatively straightforward: the weight per event depends on the muon interaction rate and the total simulated time.
The latter is straightforward to calculate, depending only on the number of long frame simulation events produced and the time window for each of these events.
The former is important due to the definition of the accidental triggers. 
These events, by definition, may only occur when no muon or neutrino is interacting within the detector. 
The weight of the accidental triggers must account for this "deadtime" due to particle interactions.
This rate, assumed to be approximately 2800 Hz, leads to a change in the effective livetime per event of roughly 15%.

Accidental triggers are computationally expensive to produce, given that they rely on a relatively rare property of random detector noise. 
In general, a few minutes of effective livetime can take up to two hours to create, with much of the processing time spent on DOMs and hits that do not make it into final triggered events.
This limits the total effective livetime that can be simulated in realistic timescales.
Current simulations used in this thesis total approximately two months of effective livetime.

\label{subsec:signal_generation}
\subsection{Signal Generation}
\label{subsubsec:genie}
\subsubsection{GENIE}
Background simulation is only part of the generation in IceCube. 
Studies searching for neutrino candidate events require simulated signal events to infer properties of the original events.
At energies ranging from approximately 1 GeV to 1 TeV, IceCube has adopted the \emph{GENIE} event generator \cite{GENIE}.
This code, used widely throughout the oscillation community, includes information about the various interactions, cross sections, and uncertainties involved in neutrino physics from reactor energies upward.

Events in the GENIE generator are produced first by selecting events from a pure power law with a given spectral index, often chosen to be either $E^{-1}$ or $E^{-2}$ depending on the purpose.
These events are then forced to interact with an electron or nucleon within a specified volume with a target with an density of ice assumed.

The type of interaction is determined using the cross section for the given flavor and energy.
The cross section model, an updated version of GRV98 \cite{GRV98}, includes resonant, elastic, quasielastic, and deep inelastic events.
Particles produced in the interaction are propagated out of the nucleus, with final state interactions included.
Hadrons with energies less than 30 GeV produced in GENIE simulation are propagated individually to obtain the light output using GEANT4 \cite{GEANT4-1,GEANT4-2}.
Above 30 GeV, the lower event-to-event variability permits the use of parametrized light output for hadrons.

The GENIE code includes tools to reweight events based on uncertainties in eg. the axial masses, cross sections, and various aspects of the interactions themselves \cite{GENIE}. 
These features are used to model uncertainties in the tau neutrino analysis presented in this thesis.

The code is regularly updated, including both new features and retuning of parametrizations to match the latest data.
The events produced in this work use GENIE version 2.8.6.

\label{subsubsec:nugen}
\subsubsection{Neutrino-Generator}
At energies higher than approximately 100 GeV, there are two changes to the simulation code.
At these energies, the contribution to the cross section from deep inelastic interactions becomes dominant while the other interactions become negligible, as expected from Figure~\ref{fig:xsec} \cite{Formaggio-Xsec}. 
This allows the simplication of the cross section calculations with no loss in generality.
In addition, the cross section continues to rise linearly with the energy.
This latter feature requires a detailed simulation of potential interactions far from the detector: namely, high energy neutrinos have a non-negligible chance of interacting while propagating through the Earth.

The \emph{Neutrino-Generator} code (hereafter, \emph{NuGen}) is designed to handle these higher energy interactions \cite{NuGen}.
In this model, neutrinos are no longer produced and forced to interact in the ice directly.
Instead, a neutrino is produced from a power law spectrum in the atmosphere surrounding the Earth.
The event is then propagated through the planet, using the PREM model of the density layers in the Earth \cite{PREM} to simulate potential interactions en route. 
Neutrinos which interact may be lost or may be regenerated following the decay of the daughter particles.
Neutrinos arriving at the detector are then forced to interact in the detector fiducial volume, yielding a simulated event.
Hadronic output is returned in the form of parametrized light output due to the large number of particles.

NuGen can be configured with various Earth models as well as different generation properties. 
For the studies contained herein, the NuGen files are produced with an $E^{-2}$ spectrum and interact following the CSMS cross section.

